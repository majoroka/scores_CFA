name: Update all data and deploy

on:
  workflow_dispatch: {}         # Permite correr manualmente no GitHub
  schedule:
    - cron: "0 */4 * * *"       # A cada 4 horas

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Instalar dependências (se existir requirements.txt)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Correr todos os fetchers
        run: |
          for f in fetch_*.py; do
            echo "A correr $f..."
            python "$f"
          done

      - name: Atualizar manifesto de emblemas (opcional)
        run: |
          if [ -f generate_crest_manifest.py ]; then
            python generate_crest_manifest.py
          fi

      - name: Commit de dados atualizados (se houver alterações)
        run: |
          if [ -n "$(git status --porcelain data/)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add data/
            git commit -m "chore(data): refresh JSON [skip ci]"
            git push
          else
            echo "Sem alterações nos JSON."
          fi

      - name: Configurar Pages
        uses: actions/configure-pages@v5

      - name: Upload artefacto do site
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy a GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4